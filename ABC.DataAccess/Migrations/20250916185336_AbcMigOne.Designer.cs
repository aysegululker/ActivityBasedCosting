// <auto-generated />
using System;
using ABC.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ABC.DataAccess.Migrations
{
    [DbContext(typeof(AbcDB))]
    [Migration("20250916185336_AbcMigOne")]
    partial class AbcMigOne
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ABC.Entity.Activity", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActivityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("ActivityTime")
                        .HasColumnType("smallint");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("NumberofPersonnel")
                        .HasColumnType("smallint");

                    b.Property<Guid>("ServiceClassID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TheCostElementUsedTheEvaluationID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("TotalPersonnelTime")
                        .HasColumnType("smallint");

                    b.Property<short>("TotalVehicleTime")
                        .HasColumnType("smallint");

                    b.HasKey("ID");

                    b.HasIndex("ServiceClassID");

                    b.HasIndex("TheCostElementUsedTheEvaluationID");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("ABC.Entity.BudgetValue", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("BudgetCost")
                        .HasColumnType("real");

                    b.Property<string>("BudgetPeriod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CashCenterID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CostItemID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CashCenterID");

                    b.HasIndex("CostItemID");

                    b.ToTable("BudgetValues");
                });

            modelBuilder.Entity("ABC.Entity.CashCenter", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("CashCenterCode")
                        .HasColumnType("smallint");

                    b.Property<Guid>("CashCenterGroupID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CashCenterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CashCenterGroupID");

                    b.ToTable("CashCenters");
                });

            modelBuilder.Entity("ABC.Entity.CashCenterGroup", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CashCenterGroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("CashCenterGroups");
                });

            modelBuilder.Entity("ABC.Entity.CostItem", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ByProduct")
                        .HasColumnType("bit");

                    b.Property<string>("CITCostClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPCostClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DistributionKeyID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("KmMultiplierEffect")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DistributionKeyID");

                    b.ToTable("CostItems");
                });

            modelBuilder.Entity("ABC.Entity.Customer", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("CustomerCode")
                        .HasColumnType("smallint");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ABC.Entity.DistributionKey", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DistributionKeyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("DistributionKeyRatio")
                        .HasColumnType("real");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("DistributionKeys");
                });

            modelBuilder.Entity("ABC.Entity.KmTime", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("InnerCityConsumption")
                        .HasColumnType("real");

                    b.Property<float>("KmTimeValue")
                        .HasColumnType("real");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("OuterCityConsumption")
                        .HasColumnType("real");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("KmTimes");
                });

            modelBuilder.Entity("ABC.Entity.KmValue", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CashCenterID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("InnerCityKm")
                        .HasColumnType("real");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("OuterCityKm")
                        .HasColumnType("real");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CashCenterID")
                        .IsUnique();

                    b.ToTable("KmValues");
                });

            modelBuilder.Entity("ABC.Entity.ReflectionOfTheMainCost", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("ReflectionOfTheMainCostRatio")
                        .HasColumnType("real");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("ReflectionOfTheMainCosts");
                });

            modelBuilder.Entity("ABC.Entity.ServiceClass", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServiceClassName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("ServiceClasses");
                });

            modelBuilder.Entity("ABC.Entity.TheCostElementUsedTheEvaluation", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TheNameoftheCostElement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TheCostElementUsedTheEvaluations");
                });

            modelBuilder.Entity("ABC.Entity.Activity", b =>
                {
                    b.HasOne("ABC.Entity.ServiceClass", "ServiceClass")
                        .WithMany("Activities")
                        .HasForeignKey("ServiceClassID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ABC.Entity.TheCostElementUsedTheEvaluation", "TheCostElementUsedTheEvaluation")
                        .WithMany("Activities")
                        .HasForeignKey("TheCostElementUsedTheEvaluationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceClass");

                    b.Navigation("TheCostElementUsedTheEvaluation");
                });

            modelBuilder.Entity("ABC.Entity.BudgetValue", b =>
                {
                    b.HasOne("ABC.Entity.CashCenter", "CashCenter")
                        .WithMany("BudgetValues")
                        .HasForeignKey("CashCenterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ABC.Entity.CostItem", "CostItem")
                        .WithMany("BudgetValues")
                        .HasForeignKey("CostItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CashCenter");

                    b.Navigation("CostItem");
                });

            modelBuilder.Entity("ABC.Entity.CashCenter", b =>
                {
                    b.HasOne("ABC.Entity.CashCenterGroup", "CashCenterGroup")
                        .WithMany("CashCenters")
                        .HasForeignKey("CashCenterGroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CashCenterGroup");
                });

            modelBuilder.Entity("ABC.Entity.CostItem", b =>
                {
                    b.HasOne("ABC.Entity.DistributionKey", "DistributionKey")
                        .WithMany("CostItems")
                        .HasForeignKey("DistributionKeyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DistributionKey");
                });

            modelBuilder.Entity("ABC.Entity.KmValue", b =>
                {
                    b.HasOne("ABC.Entity.CashCenter", "CashCenter")
                        .WithOne("KmValues")
                        .HasForeignKey("ABC.Entity.KmValue", "CashCenterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CashCenter");
                });

            modelBuilder.Entity("ABC.Entity.CashCenter", b =>
                {
                    b.Navigation("BudgetValues");

                    b.Navigation("KmValues")
                        .IsRequired();
                });

            modelBuilder.Entity("ABC.Entity.CashCenterGroup", b =>
                {
                    b.Navigation("CashCenters");
                });

            modelBuilder.Entity("ABC.Entity.CostItem", b =>
                {
                    b.Navigation("BudgetValues");
                });

            modelBuilder.Entity("ABC.Entity.DistributionKey", b =>
                {
                    b.Navigation("CostItems");
                });

            modelBuilder.Entity("ABC.Entity.ServiceClass", b =>
                {
                    b.Navigation("Activities");
                });

            modelBuilder.Entity("ABC.Entity.TheCostElementUsedTheEvaluation", b =>
                {
                    b.Navigation("Activities");
                });
#pragma warning restore 612, 618
        }
    }
}
